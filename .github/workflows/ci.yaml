name: ci

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
  schedule:
    - cron: "0 13 * * *"

jobs:
  check-for-new-cascadia:
    runs-on: ubuntu-20.04
    outputs:
      tag_name: ${{ env.CASCADIATAG }}
      tag_exists: ${{ steps.check_tag.outputs.exists }}
  
    steps:
    - name: Fetch latest release of Cascadia Code
      uses: octokit/request-action@v2.x
      id: get_latest_release
      with:
        route: GET /repos/{owner}/{repo}/releases/latest
        owner: microsoft
        repo: cascadia-code
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Get the latest Cascadia tag
      run: |
        echo "CASCADIATAG=${{ fromJson(steps.get_latest_release.outputs.data).tag_name }}" >> $GITHUB_ENV
        echo "Latest Cascadia tag is ${{ env.CASCADIATAG }}"
    - name: Check if tag exists
      uses: mukunku/tag-exists-action@v1.0.0
      id: check_tag
      with: 
        tag: ${{ env.CASCADIATAG }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
  build-and-release:
    needs: check-for-new-cascadia
    if: ${{ github.event_name != 'schedule' || needs.check-for-new-cascadia.outputs.tag_exists != 'true' }}
    runs-on: ubuntu-18.04
    env:
      NERDFONTVERS: v2.1.0

    steps:
    - uses: actions/checkout@v2
    - name: Download latest version of Cascadia
      run: |
        CASCADIAVERS=`curl -L 'https://github.com/microsoft/cascadia-code/releases/latest' | grep CascadiaCode | sed 's!\(.*/microsoft/cascadia-code/releases/download/\([^"]*\).*\|.*span.*\)!\2!'`
        echo Downloading ${CASCADIAVERS}
        curl -L https://github.com/microsoft/cascadia-code/releases/download/${CASCADIAVERS}  -O
        unzip CascadiaCode*.zip
    - name: Install FontForge
      run: |
        sudo add-apt-repository ppa:fontforge/fontforge -y -u;
        sudo apt-get install fontforge -y;
    - name: Download and patch Font Patcher
      run: |
        curl -L https://raw.githubusercontent.com/ryanoasis/nerd-fonts/${NERDFONTVERS}/font-patcher --output font-patcher
        patch font-patcher 0001*.patch
    - name: Download source fonts
      run: |
        chmod +x download-source-fonts.sh
        ./download-source-fonts.sh
    - name: Install PIP
      run: sudo apt install python-pip -y
    - name: Install configparser
      run: pip install configparser
    - name: Extract additional powerline glyphs
      run: fontforge -lang=ff -script extract-extra-glyphs
    - name: Prepare Cascadia Code font file
      run: |
        mkdir prepared
        fontforge prepare-font --input ttf/CascadiaCodePL.ttf --output prepared/CascadiaCodePL.ttf
        fontforge prepare-font --input ttf/CascadiaMonoPL.ttf --output prepared/CascadiaMonoPL.ttf
    - name: Build Powerline
      run: |
        fontforge -script font-patcher --careful --powerline --custom SomeExtraSymbols.otf \
                                       --no-progressbars --mono prepared/CascadiaCodePL.ttf | tee process.log
        git describe --always --tags | xargs fontforge rename-font --input C*.ttf \
                                                                    --output "Delugia Nerd Font.ttf" \
                                                            --name "Delugia Nerd Font" \
                                                            --version
        rm C*.ttf
        fontforge -script font-patcher --careful --powerline --custom SomeExtraSymbols.otf \
                                       --no-progressbars --mono prepared/CascadiaMonoPL.ttf | tee process_mono.log
        git describe --always --tags | xargs fontforge rename-font --input C*.ttf \
                                                            --output "Delugia Mono Nerd Font.ttf" \
                                                            --name "Delugia Mono Nerd Font" \
                                                            --version
        rm C*.ttf
    - name: Build Complete
      run: |
        fontforge -script font-patcher --careful -c --custom SomeExtraSymbols.otf \
                                       --no-progressbars --mono prepared/CascadiaCodePL.ttf | tee process_full.log
        git describe --always --tags | xargs fontforge rename-font --input C*.ttf \
                                                            --output "Delugia Nerd Font Complete.ttf" \
                                                            --name "Delugia Nerd Font" \
                                                            --version
        rm C*.ttf
        fontforge -script font-patcher --careful -c --custom SomeExtraSymbols.otf \
                                       --no-progressbars --mono prepared/CascadiaMonoPL.ttf | tee process_mono_full.log
        git describe --always --tags | xargs fontforge rename-font --input C*.ttf \
                                                            --output "Delugia Mono Nerd Font Complete.ttf" \
                                                            --name "Delugia Mono Nerd Font" \
                                                            --version
        rm C*.ttf
    - name: Build Book Complete
      run: |
        fontforge -script font-patcher --careful -c --custom SomeExtraSymbols.otf \
                                       --no-progressbars prepared/CascadiaCodePL.ttf | tee process_book.log
        git describe --always --tags | xargs fontforge rename-font --input C*.ttf \
                                                            --output "Delugia Nerd Font Book.ttf" \
                                                            --name "Delugia Nerd Font Book" \
                                                            --version
        rm C*.ttf
    - name: Check for preexisting glyphs
      run: |
        grep 'Found existing' process*.log
    - uses: actions/upload-artifact@master
      with:
        name: Delugia Nerd Font Powerline
        path: "Delugia Nerd Font.ttf"
    - uses: actions/upload-artifact@master
      with:
        name: Delugia Nerd Font Complete
        path: "Delugia Nerd Font Complete.ttf"
    - uses: actions/upload-artifact@master
      with:
        name: Delugia Nerd Font Book
        path: "Delugia Nerd Font Book.ttf"
    - uses: actions/upload-artifact@master
      with:
        name: Delugia Mono Nerd Font Powerline
        path: "Delugia Mono Nerd Font.ttf"
    - uses: actions/upload-artifact@master
      with:
        name: Delugia Mono Nerd Font Complete
        path: "Delugia Mono Nerd Font Complete.ttf"

    # Release part
    - name: Create tag
      if: ${{ github.event_name != 'pull_request' && !startsWith(github.ref, 'refs/tags/') && needs.check-for-new-cascadia.outputs.tag_exists != 'true' }}
      uses: actions/github-script@v3
      with:
        github-token: ${{ github.token }}
        script: |
          const tagName = "${{ needs.check-for-new-cascadia.outputs.tag_name }}";

          const createdTag = await github.git.createTag({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag: tagName,
            message: `Bump Cascadia version to ${tagName}`,
            object: context.sha,
            type: "commit"
          })
          
          github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${tagName}`,
              sha: createdTag.data.sha
          })
    - name: Get tag name
      id: get_tag_name
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      uses: battila7/get-version-action@v2
    - name: Release
      uses: softprops/action-gh-release@v1
      if: ${{ github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/') || needs.check-for-new-cascadia.outputs.tag_exists != 'true') }}
      with:
        tag_name: ${{ startsWith(github.ref, 'refs/tags/') && steps.get_tag_name.outputs.version || needs.check-for-new-cascadia.outputs.tag_name }}
        files: |
          Delugia Nerd Font.ttf
          Delugia Nerd Font Complete.ttf
          Delugia Nerd Font Book.ttf
          Delugia Mono Nerd Font.ttf
          Delugia Mono Nerd Font Complete.ttf
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
